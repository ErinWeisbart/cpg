# This file is autogenerated by maturin v1.4.0
# To update, run
#
#    maturin generate-ci github
#
name: Build CPG parser rust library

on:
  push:
    branches:
      - main
      - master
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, x86, aarch64, armv7, s390x, ppc64le]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install poetry
        uses: abatilo/actions-poetry@v2
      - name: Build cpgparser wheels
        uses: PyO3/maturin-action@v1
        with:
          working-directory: ./cpgparser
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
          manylinux: auto
      - name: Install built wheel
        run: |
          pip install -U pip
          ls cpgparser/dist
          pip install cpgparser --no-index --find-links cpgparser/dist --force-reinstall -vv
          python -c "import cpgparser"
      - name: Build cpgdata
        run: |
          pushd cpgdata
          poetry build
          popd
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: |
            cpgparser/dist
            cpgdata/dist

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x64, x86]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          architecture: ${{ matrix.target }}
      - name: Install poetry
        uses: abatilo/actions-poetry@v2
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          working-directory: ./cpgparser
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
      - name: Install built wheel
        run: |
          pip install -U pip
          ls cpgparser/dist
          pip install cpgparser --no-index --find-links cpgparser/dist --force-reinstall -vv
          python -c "import cpgparser"
      - name: Build cpgdata
        run: |
          pushd cpgdata
          poetry build
          popd
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: |
            cpgparser/dist
            cpgdata/dist

  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        target: [x86_64, aarch64]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install poetry
        uses: abatilo/actions-poetry@v2
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          working-directory: ./cpgparser
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
      - name: Install built wheel
        run: |
          pip install -U pip
          ls cpgparser/dist
          pip install cpgparser --no-index --find-links cpgparser/dist --force-reinstall
          python -c "import cpgparser"
      - name: Build cpgdata
        run: |
          pushd cpgdata
          poetry build
          popd
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: |
            cpgparser/dist
            cpgdata/dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        uses: abatilo/actions-poetry@v2
      - name: Build cpgparser sdist
        uses: PyO3/maturin-action@v1
        with:
          working-directory: ./cpgparser
          command: sdist
          args: --out dist
      - name: Build cpgdata sdist
        run: |
          pushd cpgdata
          poetry build -f sdist
          popd
      - name: Upload sdist
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: |
            cpgparser/dist
            cpgdata/dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [linux, windows, macos, sdist]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - name: Install poetry
        uses: abatilo/actions-poetry@v2
      - name: Publish to cpgparser PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          working-directory: ./cpgparser
          command: upload
          args: --non-interactive --skip-existing *
      - name: Publish cpgdata to PyPI
        run: |
          pushd cpgdata
          poetry build -f sdist
